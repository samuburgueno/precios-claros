{"version":3,"sources":["utils/api.js","scanner/containers/quagga.js","scanner/components/scanner-layout.js","scanner/containers/scanner.js","product-search/containers/product-search.js","product-detail/components/product-detail-layout.js","product-detail/containers/product-detail.js","App.js","index.js"],"names":["api","id_producto","fetch","concat","response","data","json","config","state","inputStream","type","constraints","width","min","height","facingMode","aspectRatio","max","locator","patchSize","halfSample","numOfWorkers","frequency","decoder","readers","format","locate","App","init","self","this","Quagga","err","handleError","start","console","log","updateOptionsForMediaRange","node","range","option","value","stepSize","firstChild","removeChild","i","document","createElement","innerHTML","appendChild","initCameraSelection","streamLabel","CameraAccess","getActiveStreamLabel","enumerateVideoDevices","then","devices","$deviceSelection","getElementById","forEach","device","text","$option","deviceId","id","createTextNode","label","length","substr","selected","_accessByPath","obj","path","val","parts","split","depth","setter","reduce","o","key","Object","assign","_convertNameToState","name","replace","result","charAt","toUpperCase","substring","setState","inputMapper","startsWith","setting","applySetting","JSON","stringify","detachListeners","stop","test","values","parseInt","supplements","lastResult","onProcessed","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","getAttribute","filter","box","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","onDetected","codigo","QuaggaScan","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react_default","a","className","Component","ScannerLayout","children","Scanner","setRef","webcam","getScreenshot","bind","assertThisInitialized","dataUri","decodeSingle","src","onSuccess","onFail","error","scanImage","components_scanner_layout","quagga","React","ProductSearch","Api","getProducto","producto","alert","scanner","ProducDetailLayout","alt","nombre","marca","precioMin","precioMax","onClick","nuevoEscaneo","ProductDetail","borrarProducto","product_detail_layout","product_search","containers_product_detail","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.7e439da8.chunk.js","sourcesContent":["const base_url = 'https://d3e6htiiul5ek9.cloudfront.net';\nconst token = 'array_sucursales=22-1-6,19-1-03296,12-1-97,10-1-268,22-1-16,19-1-00973,12-1-99,22-1-20,19-1-00812,22-1-3,22-1-24,24-1-292,22-1-18,22-1-17,10-1-32,22-1-1,22-1-31,12-1-95,19-1-00983,12-1-165,10-1-33,22-1-26,10-1-41,9-3-5218,19-1-00989,19-1-00959,22-1-5,22-1-11,12-1-96,16-1-1202';\n\nclass Api {\n\tasync getProducto(id_producto) {\n\t\tconst response = await fetch(`${base_url}/prod/producto?limit=30&id_producto=${id_producto}&${token}`)\n\t\tconst data = response.json()\n\t\treturn data;\n\t}\n}\n\nexport default new Api();","import React, { Component } from 'react'\nimport Quagga from 'quagga'\n\nimport './styles.css'\n\n// var resultCollector = Quagga.ResultCollector.create({\n//     capture: true,\n//     capacity: 20,\n//     blacklist: [{\n//         code: \"WIWV8ETQZ1\", format: \"code_93\"\n//     }, {\n//         code: \"EH3C-%GU23RK3\", format: \"code_93\"\n//     }, {\n//         code: \"O308SIHQOXN5SA/PJ\", format: \"code_93\"\n//     }, {\n//         code: \"DG7Q$TV8JQ/EN\", format: \"code_93\"\n//     }, {\n//         code: \"VOFD1DB5A.1F6QU\", format: \"code_93\"\n//     }, {\n//         code: \"4SO64P4X8 U4YUU1T-\", format: \"code_93\"\n//     }],\n//     filter: function(codeResult) {\n//         // only store results which match this constraint\n//         // e.g.: codeResult\n//         return true;\n//     }\n// });\n\nvar config = {\n\tstate: {\n        inputStream: {\n            type : \"LiveStream\",\n            constraints: {\n                width: {min: 640},\n                height: {min: 480},\n                facingMode: \"environment\",\n                aspectRatio: {min: 1, max: 2}\n            }\n        },\n        locator: {\n            patchSize: \"medium\",\n            halfSample: true\n        },\n        numOfWorkers: 2,\n        frequency: 10,\n        decoder: {\n            readers : [{\n                format: \"code_128_reader\",\n                config: {}\n            }]\n        },\n        locate: true\n    }\n}\n\nvar App = {\n    init: function() {\n        var self = this;\n\n        Quagga.init(config, function(err) {\n            if (err) {\n                return self.handleError(err);\n            }\n            //Quagga.registerResultCollector(resultCollector);\n            // App.attachListeners();\n            // App.checkCapabilities();\n            Quagga.start();\n        });\n    },\n    handleError: function(err) {\n        console.log(err);\n    },\n    // checkCapabilities: function() {\n    //     var track = Quagga.CameraAccess.getActiveTrack();\n    //     var capabilities = {};\n    //     if (typeof track.getCapabilities === 'function') {\n    //         capabilities = track.getCapabilities();\n    //     }\n    //     this.applySettingsVisibility('zoom', capabilities.zoom);\n    //     this.applySettingsVisibility('torch', capabilities.torch);\n    // },\n    updateOptionsForMediaRange: function(node, range) {\n        console.log('updateOptionsForMediaRange', node, range);\n        var NUM_STEPS = 6;\n        var stepSize = (range.max - range.min) / NUM_STEPS;\n        var option;\n        var value;\n        while (node.firstChild) {\n            node.removeChild(node.firstChild);\n        }\n        for (var i = 0; i <= NUM_STEPS; i++) {\n            value = range.min + (stepSize * i);\n            option = document.createElement('option');\n            option.value = value;\n            option.innerHTML = value;\n            node.appendChild(option);\n        }\n    },\n    // applySettingsVisibility: function(setting, capability) {\n    //     // depending on type of capability\n    //     if (typeof capability === 'boolean') {\n    //         var node = document.querySelector('input[name=\"settings_' + setting + '\"]');\n    //         if (node) {\n    //             node.parentNode.style.display = capability ? 'block' : 'none';\n    //         }\n    //         return;\n    //     }\n    //     if (window.MediaSettingsRange && capability instanceof window.MediaSettingsRange) {\n    //         var node = document.querySelector('select[name=\"settings_' + setting + '\"]');\n    //         if (node) {\n    //             this.updateOptionsForMediaRange(node, capability);\n    //             node.parentNode.style.display = 'block';\n    //         }\n    //         return;\n    //     }\n    // },\n    initCameraSelection: function(){\n        var streamLabel = Quagga.CameraAccess.getActiveStreamLabel();\n\n        return Quagga.CameraAccess.enumerateVideoDevices()\n        .then(function(devices) {\n            function pruneText(text) {\n                return text.length > 30 ? text.substr(0, 30) : text;\n            }\n            var $deviceSelection = document.getElementById(\"deviceSelection\");\n            while ($deviceSelection.firstChild) {\n                $deviceSelection.removeChild($deviceSelection.firstChild);\n            }\n            devices.forEach(function(device) {\n                var $option = document.createElement(\"option\");\n                $option.value = device.deviceId || device.id;\n                $option.appendChild(document.createTextNode(pruneText(device.label || device.deviceId || device.id)));\n                $option.selected = streamLabel === device.label;\n                $deviceSelection.appendChild($option);\n            });\n        });\n    },\n    // attachListeners: function() {\n    //     var self = this;\n\n    //     self.initCameraSelection();\n    //     $(\".controls\").on(\"click\", \"button.stop\", function(e) {\n    //         e.preventDefault();\n    //         Quagga.stop();\n    //         self._printCollectedResults();\n    //     });\n\n    //     $(\".controls .reader-config-group\").on(\"change\", \"input, select\", function(e) {\n    //         e.preventDefault();\n    //         var $target = $(e.target),\n    //             value = $target.attr(\"type\") === \"checkbox\" ? $target.prop(\"checked\") : $target.val(),\n    //             name = $target.attr(\"name\"),\n    //             state = self._convertNameToState(name);\n\n    //         console.log(\"Value of \"+ state + \" changed to \" + value);\n    //         self.setState(state, value);\n    //     });\n    // },\n    // _printCollectedResults: function() {\n    //     var results = resultCollector.getResults(),\n    //         $ul = $(\"#result_strip ul.collector\");\n\n    //     results.forEach(function(result) {\n    //         var $li = $('<li><div class=\"thumbnail\"><div class=\"imgWrapper\"><img /></div><div class=\"caption\"><h4 class=\"code\"></h4></div></div></li>');\n\n    //         $li.find(\"img\").attr(\"src\", result.frame);\n    //         $li.find(\"h4.code\").html(result.codeResult.code + \" (\" + result.codeResult.format + \")\");\n    //         $ul.prepend($li);\n    //     });\n    // },\n    _accessByPath: function(obj, path, val) {\n        var parts = path.split('.'),\n            depth = parts.length,\n            setter = (typeof val !== \"undefined\") ? true : false;\n\n        return parts.reduce(function(o, key, i) {\n            if (setter && (i + 1) === depth) {\n                if (typeof o[key] === \"object\" && typeof val === \"object\") {\n                    Object.assign(o[key], val);\n                } else {\n                    o[key] = val;\n                }\n            }\n            return key in o ? o[key] : {};\n        }, obj);\n    },\n    _convertNameToState: function(name) {\n        return name.replace(\"_\", \".\").split(\"-\").reduce(function(result, value) {\n            return result + value.charAt(0).toUpperCase() + value.substring(1);\n        });\n    },\n    // detachListeners: function() {\n    //     $(\".controls\").off(\"click\", \"button.stop\");\n    //     $(\".controls .reader-config-group\").off(\"change\", \"input, select\");\n    // },\n    // applySetting: function(setting, value) {\n    //     var track = Quagga.CameraAccess.getActiveTrack();\n    //     if (track && typeof track.getCapabilities === 'function') {\n    //         switch (setting) {\n    //         case 'zoom':\n    //             return track.applyConstraints({advanced: [{zoom: parseFloat(value)}]});\n    //         case 'torch':\n    //             return track.applyConstraints({advanced: [{torch: !!value}]});\n    //         }\n    //     }\n    // },\n    setState: function(path, value) {\n        var self = this;\n\n        if (typeof self._accessByPath(self.inputMapper, path) === \"function\") {\n            value = self._accessByPath(self.inputMapper, path)(value);\n        }\n\n        if (path.startsWith('settings.')) {\n            var setting = path.substring(9);\n            return self.applySetting(setting, value);\n        }\n        self._accessByPath(self.state, path, value);\n\n        console.log(JSON.stringify(self.state));\n        App.detachListeners();\n        Quagga.stop();\n        App.init();\n    },\n    inputMapper: {\n        inputStream: {\n            constraints: function(value){\n                if (/^(\\d+)x(\\d+)$/.test(value)) {\n                    var values = value.split('x');\n                    return {\n                        width: {min: parseInt(values[0])},\n                        height: {min: parseInt(values[1])}\n                    };\n                }\n                return {\n                    deviceId: value\n                };\n            }\n        },\n        numOfWorkers: function(value) {\n            return parseInt(value);\n        },\n        decoder: {\n            readers: function(value) {\n                if (value === 'ean_extended') {\n                    return [{\n                        format: \"ean_reader\",\n                        config: {\n                            supplements: [\n                                'ean_5_reader', 'ean_2_reader'\n                            ]\n                        }\n                    }];\n                }\n                return [{\n                    format: value + \"_reader\",\n                    config: {}\n                }];\n            }\n        }\n    },\n    state: {\n        inputStream: {\n            type : \"LiveStream\",\n            constraints: {\n                width: {min: 640},\n                height: {min: 480},\n                facingMode: \"environment\",\n                aspectRatio: {min: 1, max: 2}\n            }\n        },\n        locator: {\n            patchSize: \"medium\",\n            halfSample: true\n        },\n        numOfWorkers: 2,\n        frequency: 10,\n        decoder: {\n            readers : [{\n                format: \"code_128_reader\",\n                config: {}\n            }]\n        },\n        locate: true\n    },\n    lastResult : null\n};\n\nQuagga.onProcessed(function(result) {\n    var drawingCtx = Quagga.canvas.ctx.overlay,\n        drawingCanvas = Quagga.canvas.dom.overlay;\n\n    if (result) {\n        if (result.boxes) {\n            drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute(\"width\")), parseInt(drawingCanvas.getAttribute(\"height\")));\n            result.boxes.filter(function (box) {\n                return box !== result.box;\n            }).forEach(function (box) {\n                Quagga.ImageDebug.drawPath(box, {x: 0, y: 1}, drawingCtx, {color: \"green\", lineWidth: 2});\n            });\n        }\n\n        if (result.box) {\n            Quagga.ImageDebug.drawPath(result.box, {x: 0, y: 1}, drawingCtx, {color: \"#00F\", lineWidth: 2});\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n            Quagga.ImageDebug.drawPath(result.line, {x: 'x', y: 'y'}, drawingCtx, {color: 'red', lineWidth: 3});\n        }\n    }\n});\n\nQuagga.onDetected(function(result) {\n\t    var code = result.codeResult.code;\n\n\t    this.setState({\n\t    \tcodigo: code\n\t    });\n\n\t    // if (App.lastResult !== code) {\n\t    //     App.lastResult = code;\n\t    //     var $node = null, canvas = Quagga.canvas.dom.image;\n\n\t    //     $node = $('<li><div class=\"thumbnail\"><div class=\"imgWrapper\"><img /></div><div class=\"caption\"><h4 class=\"code\"></h4></div></div></li>');\n\t    //     $node.find(\"img\").attr(\"src\", canvas.toDataURL());\n\t    //     $node.find(\"h4.code\").html(code);\n\t    //     $(\"#result_strip ul.thumbnails\").prepend($node);\n\t    // }\n\t});\n\nclass QuaggaScan extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcodigo: 0\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tApp.init()\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div id=\"interactive\" className=\"viewport\"></div>\n\t\t\t\t<h1>{this.state.codigo}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default QuaggaScan","import React from 'react'\n\nimport './scanner-layout.css'\n\nfunction ScannerLayout(props) {\n\treturn(\n\t\t<div className=\"scanner-layout-wrapper text-center\">\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default ScannerLayout;","import React from 'react';\nimport Quagga from './quagga'\n// import Quagga from 'quagga'\n// import Webcam from \"react-webcam\";\n// import configQuagga from './configQuagga.js';\n\nimport Layout from '../components/scanner-layout'\n\n// var videoConstraints = {}\n// if (process.env === 'development') {\n//     videoConstraints = {\n//         width: {min: 480},\n//         height: {min: 640},\n//         facingMode: \"environment\",\n//         aspectRatio: {min: 1, max: 2}\n//     }\n// } else {\n//     videoConstraints = {\n//         width: 640,\n//         height: 480,\n//         facingMode: \"environment\",\n//     }\n// }\n\nclass Scanner extends React.Component {\n    setRef = webcam => {\n        this.webcam = webcam;\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            codigo: false\n        }\n\n        this.getScreenshot = this.getScreenshot.bind(this)\n    }\n\n    scanImage(dataUri) {\n        Quagga.decodeSingle({\n            decoder: {\n                readers: [\"ean_reader\"],\n            },\n            locate: true,\n            src: dataUri\n        }, function(result) {\n            if(result && result.codeResult) {\n                this.props.onSuccess(result.codeResult.code)\n            } else {\n                this.props.onFail({\n                    error: \"NOT_DECODED\"\n                })\n            }\n        }.bind(this));\n    }\n\n    getScreenshot() {\n        if (this.webcam.getScreenshot()) {\n            this.scanImage(this.webcam.getScreenshot())\n        } else {\n            this.props.onFail({\n                error: \"NOT_CAPTURED\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Quagga />\n                {/*<Webcam\n                    heigh={640}\n                    width={480}\n                    audio={false}\n                    ref={this.setRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={videoConstraints}\n                />*/}\n                {/*<button type=\"button\" className=\"btn btn-primary\" onClick={this.getScreenshot}>Escanear</button>*/}\n            </Layout>\n        );\n    }\n}\n\nexport default Scanner;","import React, { Component } from 'react';\n\nimport Api from '../../utils/api';\nimport Scanner from '../../scanner/containers/scanner.js';\n\nclass ProductSearch extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.onSuccess = this.onSuccess.bind(this)\n\t\tthis.onFail = this.onFail.bind(this)\n\t}\n\n\tasync onSuccess(id_producto) {\n\t\tconsole.log(id_producto)\n\t\tconst producto = await Api.getProducto(id_producto)\n\t\tthis.props.producto(producto)\n\t}\n\n\tasync onTest() {\n\t\tconst id_producto = 7793433000629\n\t\tconst producto = await Api.getProducto(id_producto)\n\t\tthis.props.producto(producto)\t\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.onTest()\n\t}\n\n\tonFail(error) {\n\t\talert(error.code)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Scanner \n\t\t\t\tonFail={this.onFail}\n\t\t\t\tonSuccess={this.onSuccess} />\n\t\t);\n\t}\n}\n\nexport default ProductSearch;","import React from 'react';\n\nimport './product-detail.css';\n\nfunction ProducDetailLayout(props) {\n\treturn(\n\t\t<div className=\"product-detail-wrapper\">\n\t\t\t<div className=\"card\">\n\t\t\t\t<img alt={props.producto.nombre} className=\"card-img-top\" src={`https://imagenes.preciosclaros.gob.ar/productos/${props.producto.id}.jpg`} />\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<h5 className=\"card-title\">{props.producto.nombre}</h5>\n\t\t\t\t\t<p className=\"card-text\">{props.producto.marca}</p>\n\t\t\t\t\t<p><small>Precio Minimo</small> <br/>{props.producto.precioMin}</p>\n\t\t\t\t\t<p><small>Precio Máximo</small> <br/>{props.producto.precioMax}</p>\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={props.nuevoEscaneo}>Escanear otro</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ProducDetailLayout;","import React, { Component } from 'react';\nimport Layout from '../components/product-detail-layout'\n\nclass ProductDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.nuevoEscaneo = this.nuevoEscaneo.bind(this)\n\t}\n\n\tnuevoEscaneo() {\n\t\tthis.props.borrarProducto()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout \n\t\t\t\tnuevoEscaneo={this.nuevoEscaneo}\n\t\t\t\t{...this.props.producto} \n\t\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default ProductDetail;","import React, { Component } from 'react';\n\nimport ProductSearch from './product-search/containers/product-search'\nimport ProductDetail from './product-detail/containers/product-detail'\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tproducto: false\n\t\t}\n\n\t\tthis.producto = this.producto.bind(this)\n\t\tthis.borrarProducto = this.borrarProducto.bind(this)\n\t}\n\n\tproducto(producto) {\n\t\tthis.setState({\n\t\t\tproducto\n\t\t});\n\t}\n\n\tborrarProducto() {\n\t\tthis.setState({\n\t\t\tproducto: false\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{!this.state.producto &&\n\t\t\t\t\t<ProductSearch \n\t\t\t\t\t\tproducto={this.producto} />\n\t\t\t\t}\n\n\t\t\t\t{this.state.producto &&\n\t\t\t\t\t<ProductDetail \n\t\t\t\t\t\tborrarProducto={this.borrarProducto}\n\t\t\t\t\t\tproducto={this.state.producto} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}
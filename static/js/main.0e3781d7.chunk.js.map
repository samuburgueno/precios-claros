{"version":3,"sources":["Scanner.js","index.js"],"names":["Scanner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setRef","webcam","state","codigo","getScreenshot","bind","assertThisInitialized","dataUri","Quagga","decodeSingle","decoder","readers","locate","src","result","codeResult","setState","code","error","scanImage","react_default","a","createElement","className","role","react_webcam_default","style","backgroundColor","audio","width","height","ref","screenshotFormat","videoConstraints","facingMode","exact","type","onClick","React","Component","ReactDOM","render","Scanner_Scanner","document","getElementById"],"mappings":"mPAIqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KASVQ,OAAS,SAAAC,GACLR,EAAKQ,OAASA,GARdR,EAAKS,MAAQ,CACTC,QAAQ,GAGZV,EAAKW,cAAgBX,EAAKW,cAAcC,KAAnBX,OAAAY,EAAA,EAAAZ,CAAAD,IAPNA,yEAcTc,GACNC,IAAOC,aAAa,CAChBC,QAAS,CACLC,QAAS,CAAC,eAEdC,QAAQ,EACRC,IAAKN,GACN,SAASO,GACLA,EAAOC,WACNnB,KAAKoB,SAAS,CACVb,OAAQW,EAAOC,WAAWE,OAG9BrB,KAAKoB,SAAS,CACVE,MAAO,sBAGjBb,KAAKT,+CAIHA,KAAKK,OAAOG,gBACZR,KAAKuB,UAAUvB,KAAKK,OAAOG,iBAE3BR,KAAKoB,SAAS,CACVE,MAAO,0DAMf,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,gCACC1B,KAAKM,MAAMgB,OACRE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,KAAK,SAAS5B,KAAKM,MAAMgB,OAEhEtB,KAAKM,MAAMC,QACRiB,EAAAC,EAAAC,cAAA,wBAAa1B,KAAKM,MAAMC,QAE5BiB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACIK,MAAO,CAACC,gBAAiB,QACzBC,OAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,IAAKnC,KAAKI,OACVgC,iBAAiB,aACjBC,iBAAkB,CACdJ,MAAO,IACPC,OAAQ,IACRI,WAAY,CAAEC,MAAO,kBAG7Bf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASb,UAAU,kBAAkBc,QAASzC,KAAKQ,eAAhE,oBAtEqBkC,IAAMC,WCG3CC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.0e3781d7.chunk.js","sourcesContent":["import React from 'react';\nimport Quagga from 'quagga'\nimport Webcam from \"react-webcam\";\n\nexport default class Scanner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            codigo: false\n        }\n\n        this.getScreenshot = this.getScreenshot.bind(this)\n    }\n\n    setRef = webcam => {\n        this.webcam = webcam;\n    };\n\n    scanImage(dataUri) {\n        Quagga.decodeSingle({\n            decoder: {\n                readers: [\"ean_reader\"],\n            },\n            locate: true,\n            src: dataUri\n        }, function(result) {\n            if(result.codeResult) {\n                this.setState({\n                    codigo: result.codeResult.code\n                });\n            } else {\n                this.setState({\n                    error: \"Error de lectura\"\n                });\n            }\n        }.bind(this));\n    }\n\n    getScreenshot() {\n        if (this.webcam.getScreenshot()) {\n            this.scanImage(this.webcam.getScreenshot())\n        } else {\n            this.setState({\n                error: \"No se puede capturar\"\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container text-center\">\n                <h2>Escanear productos</h2>\n                {this.state.error &&\n                    <div className=\"alert alert-danger\" role=\"alert\">{this.state.error}</div>\n                }\n                {this.state.codigo &&\n                    <h4>CÃ³digo: {this.state.codigo}</h4>\n                }\n                <Webcam\n                    style={{backgroundColor: '#333'}}\n                    audio={false}\n                    width={400}\n                    height={370}\n                    ref={this.setRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={{\n                        width: 400,\n                        height: 370,\n                        facingMode: { exact: \"environment\" }\n                    }}\n                />\n                <br />\n                <div className=\"clearfix\"></div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.getScreenshot}>Escanear</button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\nimport Scanner from './Scanner';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Scanner />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["Scanner.js","index.js"],"names":["Scanner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","codigo","dataUri","Quagga","decodeSingle","decoder","readers","locate","src","result","codeResult","setState","code","bind","_this2","react_default","a","createElement","build_default","idealResolution","width","height","idealFacingMode","imageCompression","isMaxResolution","sizeFactor","onTakePhoto","React","Component","ReactDOM","render","Scanner_Scanner","document","getElementById"],"mappings":"2OAKqBA,qBACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,OAAQ,aAJGR,2EAQNS,GACTC,IAAOC,aAAa,CAChBC,QAAS,CACLC,QAAS,CAAC,eAEdC,QAAQ,EACRC,IAAKN,GACN,SAASO,GACLA,EAAOC,WACNd,KAAKe,SAAS,CACVV,OAAQQ,EAAOC,WAAWE,OAG9BhB,KAAKe,SAAS,CACVV,OAAQ,sBAGlBY,KAAKjB,wCAGF,IAAAkB,EAAAlB,KACL,OACImB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKrB,KAAKI,MAAMC,QAChBc,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,gBAAiB,CAACC,MAAO,IAAKC,OAAQ,KACtCC,gBAAgB,cAChBC,iBAAkB,IAClBC,iBAAiB,EACjBC,WAAY,GACZC,YAAa,SAACxB,GAAcY,EAAKY,YAAYxB,cAvC5ByB,IAAMC,YCE3CC,IAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.3d709c3f.chunk.js","sourcesContent":["import React from 'react';\nimport Quagga from 'quagga'\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\nexport default class Scanner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            codigo: \"Inicio...\"\n        }\n    }\n\n    onTakePhoto (dataUri) {\n        Quagga.decodeSingle({\n            decoder: {\n                readers: [\"ean_reader\"],\n            },\n            locate: true,\n            src: dataUri\n        }, function(result) {\n            if(result.codeResult) {\n                this.setState({\n                    codigo: result.codeResult.code\n                });\n            } else {\n                this.setState({\n                    codigo: \"Error de lectura\"\n                });\n            }\n        }.bind(this));\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.codigo}</h1>\n                <Camera\n                    idealResolution={{width: 640, height: 480}}\n                    idealFacingMode=\"environment\"\n                    imageCompression={0.97}\n                    isMaxResolution={false}\n                    sizeFactor={0.5}\n                    onTakePhoto={(dataUri) => { this.onTakePhoto(dataUri); }} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\nimport Scanner from './Scanner';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Scanner />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}